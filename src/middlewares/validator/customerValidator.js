const { check, validationResult } = require('express-validator')

exports.validateCustomer = [
  check('firstName')
    .trim()
    .escape()
    .not()
    .isEmpty()
    .withMessage('User firstname can not be empty.')
    .bail()
    .isLength({ min: 2 })
    .withMessage('Minimum 2 characters required.')
    .bail(),
  check('lastName')
    .trim()
    .escape()
    .not()
    .isEmpty()
    .withMessage('User lastname can not be empty.')
    .bail()
    .isLength({ min: 2 })
    .withMessage('Minimum 2 characters required.')
    .bail(),
  check('birthdate')
    .trim()
    .escape()
    .not()
    .isEmpty()
    .withMessage('User birthdate can not be empty.')
    .bail()
    .isDate()
    .withMessage('Must be a valid date.')
    .bail(),
  check('telNum')
    .trim()
    .escape()
    .not()
    .isEmpty()
    .withMessage('User phone number can not be empty.')
    .bail()
    .custom((val) => /^(?:(?:\+|00)33|0)\s*[1-9](?:[\s.-]*\d{2}){4}$/.test(val))
    .withMessage('Must be a valid phone number')
    .bail(),
  check('email')
    .trim()
    .normalizeEmail()
    .not()
    .isEmpty()
    .withMessage('User phone number can not be empty.')
    .bail()
    .isEmail()
    .withMessage('Invalid email address')
    .bail(),
  (req, res, next) => {
    const errors = validationResult(req)
    if (!errors.isEmpty())
      return res.status(422).json({ errors: errors.array() })
    next()
  },
]
